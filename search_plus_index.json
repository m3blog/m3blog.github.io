{"./":{"url":"./","title":"主页","keywords":"","body":"Summary 主页 LeetCode 攻关 LeetCode#1. Two Sum LeetCode#1025. Divisor Game GitBook 教程 C++ Origin STL std::vector使用(1) FutureCloud 序章 JavaScript 廖雪峰的JavaScript教程 "},"leetcode/":{"url":"leetcode/","title":"LeetCode 攻关","keywords":"","body":"LeetCode 攻关 Leetcode可以锻炼人的算法能力。leetcode是个题库，里面有很编程多面试的题目，可以在线编译运行。难度比较高。如果自己能都做出来，对面大公司很有帮助。虽然我不是要面试大公司的人，可是算法总是要过的第一个关。 "},"leetcode/articles/twosum.html":{"url":"leetcode/articles/twosum.html","title":"LeetCode#1. Two Sum","keywords":"","body":"LeetCode#1. Two Sum 我的代码十分简单，“暴力型”的： class Solution { public: vector twoSum(vector& nums, int target) { for(auto i=0;i a; a.push_back(i); a.push_back(j); return a; } } } vector emptyvector; return emptyvector; } }; 还编译错误了好几次！虽然对了，可是用时不大乐观： 我都不好意思晒出来……我太菜了…… 不过我只有六年级吗。加油！！！ 版权声明：本文为【Cloud】原创，依据 CC-BY-NC-SA 4.0 许可证进行授权。转载请附上本文链接，谢谢！ "},"leetcode/articles/divgame.html":{"url":"leetcode/articles/divgame.html","title":"LeetCode#1025. Divisor Game","keywords":"","body":"LeetCode#1025. Divisor Game 规则 爱丽丝和鲍勃一起玩游戏，他们轮流行动。爱丽丝先手开局。 最初，黑板上有一个数字 N 。在每个玩家的回合，玩家需要执行以下操作： 选出任一 x，满足 0 只有在爱丽丝在游戏中取得胜利时才返回 True，否则返回 false。假设两个玩家都以最佳状态参与游戏。 示例 示例 1： 输入：2 输出：true 解释：爱丽丝选择 1，鲍勃无法进行操作。 示例 2： 输入：3 输出：false 解释：爱丽丝选择 1，鲍勃也选择 1，然后爱丽丝无法进行操作。 我的想法 示例分析 既然给了示例，那么得用起来啊！输入的是2，那么Alice直接选1，Bob就挂了。如果输入的是3，Alice必须选1（奇数的约数都是奇数）。那么Bob也必须选1，Alice 就会挂掉。 大胆猜测 2 Alice，3Bob。Alice先手。那么可不可以猜测，Alice偶数赢（Bob奇数赢）？ 论证 说了，奇数的约数都是奇数。那么一个奇数减去一个奇数必定得一个偶数。而Bob就可以一直选2.因为偶数的约数（除了1）全都是偶数。就算Alice没选2，Bob也可以 心安理得的一直选2.那么我们的猜测正确。 无敌代码 既然猜测正确，代码呼之欲出： class Solution { public: bool divisorGame(int N) { return !(N%2); } }; 呵呵！LeetCode，我战胜了你的一道题！加油！！！！！ 版权声明：本文为【Cloud】原创，依据 CC-BY-NC-SA 4.0 许可证进行授权。转载请附上本文链接，谢谢！ "},"gitbook/":{"url":"gitbook/","title":"GitBook 教程","keywords":"","body":"GitBook 教程 GitBook可以用来建和我一样的博客哟~~~~ 1.GitBook安装 npm install gitbook-cli 如果太慢可以考虑换国内源。 2.GitBook 配置 这个随便网上搜一篇博文吧，我也是这样过来的:) (主要原因还是懒） 为了补偿大家，把我的贴出来： { \"title\": \"Cloud's Blog\", \"author\": \"Cloud\", \"description\": \"Cloud's Blog\", \"language\": \"zh-hans\", \"gitbook\": \"3.2.3\", \"styles\": { \"website\": \"./styles/website.css\" }, \"structure\": { \"readme\": \"README.md\" }, \"links\": { \"sidebar\": { \"我的狗窝\": \"https://cloudcnblog.gitee.io/\" } }, \"plugins\": [ \"-sharing\", \"splitter\", \"expandable-chapters-small\", \"anchors\", \"hide-element\", \"chapter-fold\", \"code\", \"-lunr\", \"-search\", \"search-pro\", \"pageview-count\", \"popup\", \"github\", \"github-buttons\", \"-donate\", \"sharing-plus\", \"anchor-navigation-ex\", \"favicon\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/Blankj\" }, \"github-buttons\": { \"buttons\": [{ \"user\": \"Blankj\", \"repo\": \"glory\", \"type\": \"star\", \"size\": \"small\", \"count\": true } ] }, \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": false, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": false, \"linkedin\": false, \"messenger\": false, \"pocket\": false, \"qq\": false, \"qzone\": false, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": false, \"whatsapp\": false, \"all\": [ \"google\", \"facebook\", \"weibo\", \"twitter\", \"qq\", \"qzone\", \"linkedin\", \"pocket\" ] }, \"anchor-navigation-ex\": { \"showLevel\": false }, \"favicon\":{ \"shortcut\": \"./source/images/favicon.jpg\", \"bookmark\": \"./source/images/favicon.jpg\", \"appleTouch\": \"./source/images/apple-touch-icon.jpg\", \"appleTouchMore\": { \"120x120\": \"./source/images/apple-touch-icon.jpg\", \"180x180\": \"./source/images/apple-touch-icon.jpg\" } }, \"hide-element\": { \"elements\": [\".gitbook-link\"] } } } 3.GitBook SUMMARY配置 这是你的目录。例如：（这是我的） # Summary * [Introduction](README.md) * [LeetCode 攻关](leetcode/README.md) * [LeetCode#1. Two Sum](leetcode/articles/twosum.md) * [LeetCode#1025. Divisor Game](leetcode/articles/divgame.md) * [GitBook 教程](gitbook/index.md) 看到缩进就会被解释成子目录。另外需要强调的是： 你完全不用新建这些文件。你可以直接写上你期望的地址，保存后回到根目录执行 gitbook init 就会为你自动创建（够智能吧？？） 写完你想写的，直接gitbook install(安装插件),再gitbook serve，就可以在https://localhost:4000/里看到了！ 4,部署到GitHub（简单粗暴） 首先假设你有一个Github账户。 去账户下新建一个.github.io的repository，然后把地址复制下来。 使用Windows： 在目录下新建一个deploy.bat,输入以下内容。 @ call gitbook build @ call cd _book @ call git init @ call git remote add origin https://github.com/m3blog/m3blog.github.io.git :: git @ call git add . @ call git commit -m \"site update\" @ call git push -f origin master @ call pause 再次申明：这个repo是我的！！你是push不上来的！！ 注释：如果你之前用了gitbook serve命令，务必先关上。不知道为什么，算Bug吗？ 还有一个bug，你要到%HOMEPATH%/.gitbook/versions/3.2.3/lib/output/website/copyPluginsAssets中给所有的confirm: true换成confirm: false. 使用linux 类似，小改即可。 __EOF__ 版权声明：本文为【Cloud】原创，依据 CC-BY-NC-SA 4.0 许可证进行授权。转载请附上本文链接，谢谢！ "},"c++/":{"url":"c++/","title":"C++","keywords":"","body":"C++ The C++ Programming Language "},"c++/origin/":{"url":"c++/origin/","title":"Origin","keywords":"","body":"Origin "},"c++/origin/stl/":{"url":"c++/origin/stl/","title":"STL","keywords":"","body":"STL "},"c++/origin/stl/vector1.html":{"url":"c++/origin/stl/vector1.html","title":"std::vector使用(1)","keywords":"","body":"std::vector使用(1) std::vector简介 template > class vector; //通用模板 　　 vector是表示可以改变大小的数组的序列容器。 　　就像数组一样，vector使用连续存储空间存储元素，这意味着它们的元素也可以使用指向其元素的指针进行偏移来访问，并与数组一样高效。但与数组不同的是， vector的大小可以动态变化，并且是由容器自动处理的。 初步运用vector 所谓初步，就是把它当动态数组用。举个栗子： #include #include class Soultion { public: static void calc() try { int x; std::vector xs; std::cout>x; if(x==-1) break; xs.push_back(x); } for(int i=0,x=0;i 执行结果： 1 2 3 4 5 6 -1 21 那么今天就到这里啦，期待下篇：高级应用！ "},"c++/futurecloud/":{"url":"c++/futurecloud/","title":"FutureCloud","keywords":"","body":"FutureCloud 说明： 我准备写的游戏 "},"c++/futurecloud/xz.html":{"url":"c++/futurecloud/xz.html","title":"序章","keywords":"","body":"序章 改名 Love Past and Future这个名字我十分喜欢。可是太长了，不容易在游戏里展现。LPaF这个缩写又不容易懂。于是我想了一个名字：FutureCloud. Future是原名的最后一个词。Cloud是我的英文名。可是我实在很喜欢Love Past and Future这个名儿。于是我“硬生生”的把两个串在一起： Love Past and Future at FutureCloud 这的确更长了。于是我规定： 在开发过程中一律使用LPaF这个名字。 在游戏动画里一律使用FutureCloud. 在游戏首页使用全名。 github仓库使用以前的名字。 游戏动画我在这里设计一下： 游戏动画 |--- | | | | -- --- | __ __ |--- | | -+- | | |/ |-- | | | | | | | / | |___| | |__| | |-- --- | |__| |__| |/ (纯手工打的，朝天发誓没有用代码） 有可能我要把每个功能封装一个函数（u要打3次！！！）有一个beautiful的想法：在每画一笔时停顿0.1秒：这样更有美感。 那么开始吧，LPaF 4.0,I am coming!!! "},"javascript/":{"url":"javascript/","title":"JavaScript","keywords":"","body":"JavaScript "}}